c的历史和特点
1.2.1 c语言的设计理念让用户能轻松的完成自顶向下的规划、结构化编程和模块化设计。
      强大的控制结构，快速，代码紧凑，程序更小，可移植到其他计算机
1.2.6 c语言的缺点 c语言使用指针，而涉及指针的编程错误往往难以察觉，ps：想拥有自由就必
      须时刻保持警惕
1.6   1987年的The CProgramming Language 第一版是公认的C标准，称之为K&R C 或者经典C
1.8.1 编译器把源代码转换成中间代码，链接器把中间代码和其他代码合并，生成可执行文件
      。另外，链接器还将你编写的程序和预编译的库代码何合并。
PS：  源代码转换成机器语言代码，并把结果放在目标代码文件中，此时目标代码并不能运行，它
      还需要启动代码和库函数，启动代码根据所在环境的不同，相应的启动代码也不一样；
      目标代码不包含库函数的代码，他只包含了使用函数的指令，函数的真正代码储存在一个
      被成为库的文件中；
      链接器的作用就是把你编写的目标大码，系统的标准启动代码和库代码这三个部分合并成一个
      文件，即可执行文件。
1.8.3 GNU项目是一个开发大量免费UNIX软件的集合（GNU的意思是：“GNU‘s Not UNIX”即GNU不是
      UNiX）
      LLVM 是与编译器相关的开源软件的集合，它的编译器是Clang
1.8.6 让程序不会在运行之后窗口立马消失，可以在return这行代码前面加上 getchar()如果需要
      一个击键等待那么就要用两次getchar()
1.12  复习题
      1.对编程而言，可移植性意味着不用过多的修改源代码，便能移植到另外的机器上使用
	  /*完美的可移植程序是:其源代码无需修改能在不同计算机系统中成功编译的程序.*/
	  
      2.源代码文件是程序员编写的初始代码，目标代码文件是经过编译器编译后得到的文件通常
      是以obj为扩展名，可执行文件是链接器将库代码，目标代码和系统标准启动代码合并起来
      的文件
	  /*源代码文件包含程序员使用的任何编程语言编写的代码.目标代码文件包含机器语言代码,它不必是
	  完整的程序代码,可执行文件包含组成可执行程序的完整机器语言代码*/
	  
      3.定义该程序的目标——设计程序的该如何编写——编写源代码——编译代码——生成可执行文件——
      调试代码——代码的维护和修改
	  /*定义程序的目标→设计程序→编写程序→编译程序→运行程序→测试和调试程序→维护和修改程序*/
	  
      4.编译器的作用是将源代码编译成相应机器的机器语言代码
      5.链接器的作用是将库代码，目标代码和系统标准启动代码合并起来，生成一个可执行程序。
1.13  编程练习
	  程序目标:把输入数字的英寸单位转换成厘米单位
	  1.要求用户输入一个数字
	  2.将这个数字乘以2.54.赋给一个值
	  3.输出该值
	  
	  
      
      